{"version":3,"sources":["redux/dialogs-reducer.js","components/Navbar/Navbar.module.css","assets/images/user.png","assets/images/preloader.gif","components/Profile/Profile.module.css","components/common/FormsControls/FormsControls.js","api/api.js","redux/profile-reducer.js","redux/sidebar-reducer.js","api/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.js","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Login/Login.jsx","App.js","hoc/withSuspense.js","index.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.module.css","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css"],"names":["initialState","messages","id","message","dialogData","name","dialogsReducer","state","action","type","body","newMessageBody","sendMessageCreator","module","exports","FormControl","input","meta","children","hasError","touched","error","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","component","validate","text","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","usersId","post","unfollow","delete","getProfile","userId","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","posts","likeCount","profile","setStatus","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","SET_USER_DATA","login","isAuth","setUserData","payload","getAuthUserData","initialized","reducers","combineReducers","profilePage","newPost","newPostText","messagesPage","sidebar","usersPage","followed","count","filter","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","s","nav","to","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","selectedPage","page","key","User","user","userPhoto","src","photos","small","disabled","some","Users","Preloader","preloader","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","React","Component","connect","bind","totalCount","Post","maxLength","maxLengthCreator","AddNewPostFormRedux","reduxForm","onSubmit","handleSubmit","Field","required","MyPosts","memo","postsElements","values","addPost","MyPostsContainer","addPostActionCreator","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","ProfileInfo","large","Profile","ProfileContainer","match","params","authorizedUserId","history","getUserProfile","withRouter","Header","header","loginBlock","logout","HeaderContainer","LoginReduxForm","formSummaryError","length","stopSubmit","_error","formData","console","log","DialogsContainer","lazy","App","initializeApp","path","render","Suspense","fallback","promise","Promise","all","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6de73b88.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'message1'},\r\n        {id: 2, message: 'message2'},\r\n        {id: 3, message: 'message3'}\r\n    ],\r\n    dialogData: [\r\n        {id: 1, name: 'dialog1'},\r\n        {id: 2, name: 'dialog2'},\r\n        {id: 3, name: 'dialog3'}\r\n    ],\r\n};\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n            };\r\n        default: return state;\r\n    } \r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1a2xF\"};","module.exports = __webpack_public_path__ + \"static/media/user.d48a8973.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.6dc0808d.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__2CXMm\"};","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta, children}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = props => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = props => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, component, validate, props = {}, text = '') =>\r\n    <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            component={component}\r\n            validate={validate}\r\n            {...props}\r\n        /> {text}\r\n    </div>;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: { \"API-KEY\": \"6abc813c-9b11-4474-87c9-56c0f8b74242\" }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(usersId) {\r\n        return instance.post(`follow/${usersId}`, {});\r\n    },\r\n    unfollow(usersId) {\r\n        return instance.delete(`follow/${usersId}`);\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\n","import {profileAPI, usersAPI} from '../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'post1', likeCount: 12},\r\n        {id: 2, message: 'post2', likeCount: 11},\r\n        {id: 3, message: 'post3', likeCount: 19}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\n//thunkMiddleware\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};","let initialState = {};\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n};","import {usersAPI} from '../api/api';\r\nimport {updateObjectInArray} from \"../api/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: null,\r\n    followingInProgress: []\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async dispatch => {\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(toggleIsFetching(true));\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = userId => async dispatch => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n};\r\n\r\nexport const unfollow = userId => async dispatch => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n};","import {authAPI} from '../api/api'\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {...state, ...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => (\r\n    {type: SET_USER_DATA, payload: {userId, email, login, isAuth}}\r\n);\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false));\r\n    }\r\n};","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {...state, initialized: true};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => dispatch => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport { profileReducer } from \"./profile-reducer\";\r\nimport { dialogsReducer } from \"./dialogs-reducer\";\r\nimport { sidebarReducer } from \"./sidebar-reducer\";\r\nimport { usersReducer } from './users-reducer';\r\nimport { authReducer } from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware)); //applyMiddleware - промежуточный слой для ThunkCreator. npm i redux-thunk\r\n\r\nexport default store;","import React from 'react';\nimport {NavLink} from \"react-router-dom\"\nimport s from './Navbar.module.css';\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <ul>\n                <li><NavLink to=\"/profile\">Profile</NavLink></li>\n                <li><NavLink to=\"/messages\">Messages</NavLink></li>\n                <li><NavLink to=\"/users\">Users</NavLink></li>\n                <li><NavLink to=\"/news\">News</NavLink></li>\n                <li><NavLink to=\"/music\">Music</NavLink></li>\n                <li><NavLink to=\"/settings\">Settings</NavLink></li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React, { useState } from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\nexport const Paginator = ({totalItemsCount, pageSize, onPageChanged, currentPage, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n    return (\r\n        <div className={s.paginator}>\r\n            {\r\n                portionNumber > 1 &&\r\n                <button onClick={()=>{setPortionNumber(portionNumber-1)}}>PREV</button>\r\n            }\r\n            {\r\n                pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => {\r\n                    return <div onClick={() => {\r\n                        onPageChanged(p)\r\n                    }} className={currentPage === p ? s.selectedPage : s.page} key={p}>{p}</div>\r\n                })\r\n            }\r\n            {\r\n                portionCount > portionNumber &&\r\n                    <button onClick={()=>{setPortionNumber(portionNumber + 1)}}>NEXT</button>\r\n            }\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={`/profile/${user.id}`}>\r\n                        <img className={s.userPhoto}\r\n                             src={user.photos.small != null ? user.photos.small : userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {unfollow(user.id)}}>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {follow(user.id)}}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'u.location.country'}</div>\r\n                    <div>{'u.location.city'}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\nexport const Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, ...props}) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <div className = {s.Users}>\r\n            <Paginator\r\n                onPageChanged={onPageChanged}\r\n                currentPage={currentPage}\r\n                totalItemsCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n            />\r\n            {\r\n                props.users.map(u =>\r\n                    <User\r\n                        key={u.key}\r\n                        user={u}\r\n                        followingInProgress={props.followingInProgress}\r\n                        unfollow={props.unfollow}\r\n                        follow={props.follow}\r\n                    />\r\n                )\r\n            };\r\n        </div>\r\n    )\r\n};\r\n\r\n","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.gif';\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={preloader} />\r\n}\r\n\r\nexport default Preloader;","import { createSelector } from 'reselect'\r\n\r\nconst getUserSelector = state => state.usersPage.users;\r\nexport const getUsers = createSelector(getUserSelector, users => users.filter(u => true));\r\n\r\nexport const getPageSize = state => state.usersPage.pageSize;\r\nexport const getTotalUsersCount = state => state.usersPage.totalUsersCount;\r\nexport const getCurrentPage = state => state.usersPage.currentPage;\r\nexport const getIsFetching = state => state.usersPage.isFetching;\r\nexport const getFollowingInProgress = state => state.usersPage.followingInProgress;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, unfollow, requestUsers} from '../../redux/users-reducer';\r\nimport {Users} from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(state => ({\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }), {follow, unfollow, requestUsers})\r\n)(UsersContainer);","import React from 'react';\n\n// Компонент \"Profile\"\nconst Post = (props) => {\n  return (\n    <div>\n      {props.message}\n    </div>\n  );\n}\n\nexport default Post;\n","import React from 'react';\nimport Post from './Post/Post.js'\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength = maxLengthCreator(10); //Валидатор для проверки кол-ва введенных символов\n\nlet AddNewPostForm = props => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field name={'newPostText'} component={Textarea} validate={[required, maxLength]} />\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n};\n\nlet AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n\nconst MyPosts = React.memo(props => {\n    let postsElements = props.posts.map(p => <Post message={p.message} likeCount={p.likeCount}/>);\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    };\n\n    return (\n        <>\n            <h3>MyPosts</h3>\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\n            {postsElements}\n        </>\n    );\n});\n\nexport default MyPosts;\n","import {addPostActionCreator} from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts.js';\nimport {connect} from 'react-redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React, {useState, useEffect} from 'react';\r\n\r\nexport const ProfileStatusWithHooks = props => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(status);\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>{props.status || '-----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode } type=\"text\" value={status}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n};","import React from 'react';\r\n\r\nexport class ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    };\r\n\r\n    activateEditMode = () => {\r\n        this.setState({ editMode: true });\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({ editMode: false });\r\n        this.props.updateStatus(this.state.status);\r\n    };\r\n\r\n    onStateChange = (e) => {\r\n        this.setState({ status: e.currentTarget.value });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({ status: this.props.status });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.state.status || '-----'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={ this.onStateChange } autoFocus={ true } onBlur={ this.deactivateEditMode } type=\"text\" value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport { ProfileStatus } from './ProfileStatus/ProfileStatus';\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <>\r\n            <img src={props.profile.photos.large} />\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\nimport s from './Profile.module.css'\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\n\nconst Profile = (props) => {\n  return (\n    <div className = {s.Profile}>\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n      <MyPostsContainer />\n    </div>\n  );\n}\n\nexport default Profile;\n\n\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus} from './../../redux/profile-reducer'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) this.props.history.push('/login');\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(state => ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }), {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from 'react-router-dom';\n\nexport const Header = (props) => {\n    return (\n        <header className={s.header}>\n            <div className={s.loginBlock}>\n                {\n                    props.isAuth\n                        ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\n                        : <NavLink to={'/login'}>Login</NavLink>\n                }\n            </div>\n        </header>\n    );\n};\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Header} from './Header';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nexport default connect(state => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n}), {logout})(HeaderContainer);\r\n\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', Input, [required])}\r\n            {createField('Password', 'password', Input, [required], {type: 'password'})}\r\n            {createField(null, 'rememberMe', Input, [], {type: 'checkbox'}, 'remember me')}\r\n            {error && <div className={s.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    let onSubmit = formData => {\r\n        console.log(formData);\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\nimport {Route, withRouter} from \"react-router-dom\"\nimport Navbar from './components/Navbar/Navbar.js';\nimport UsersContainer from './components/Users/UsersContainer.js';\nimport ProfileContainer from './components/Profile/ProfileContainer.js';\nimport HeaderContainer from './components/Header/HeaderContainer.js';\nimport './App.css';\nimport Login from './components/Login/Login.jsx';\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n// import DialogsContainer from './components/Dialogs/DialogsContainer.js';\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer.js'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n    render() {\n        if (!this.props.initialized) return <Preloader/>;\n        return (\n            <div className='App'>\n                <HeaderContainer/>\n                <div className='main'>\n                    <Navbar/>\n                    <div className='mainRight'>\n                        <Route path=\"/messages\" render={withSuspense(DialogsContainer)} />\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n                        <Route path=\"/users\" render={() => <UsersContainer />} />\n                        <Route path=\"/login\" render={() => <Login />}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect(state => ({\n        initialized: state.app.initialized\n    }), {initializeApp})\n) (App);\n","import React from 'react';\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = Component => props =>\r\n    <React.Suspense fallback={ <Preloader /> }>\r\n        <Component {...props} />\r\n    </React.Suspense>;\r\n","import store from './redux/redux-store.js'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport {HashRouter} from \"react-router-dom\"\nimport {Provider} from \"react-redux\";\n\nReactDOM.render (\n    // <HashRouter basename={process.env.PUBLIC_URL}>\n    <HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>, document.getElementById('root')\n);\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__19qn3\",\"error\":\"FormsControls_error__gjSpa\",\"formSummaryError\":\"FormsControls_formSummaryError__4C0Lo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__3lxwk\",\"userPhoto\":\"Users_userPhoto__2p4ji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__s3-TL\",\"page\":\"Paginator_page__1AyQ5\",\"paginator\":\"Paginator_paginator__12V0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__22TY4\",\"loginBlock\":\"Header_loginBlock__KRd_3\"};"],"sourceRoot":""}