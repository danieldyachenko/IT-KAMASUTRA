{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","to","id","name","Messages","message","maxLength","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","messagesPage","dialogElements","dialogData","map","d","key","messagesElement","messages","m","Message","className","s","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,2B,+FCWbC,EARI,SAACC,GAClB,OACE,6BACE,kBAAC,IAAD,CAASC,GAAM,aAAeD,EAAME,IAAI,6BAAMF,EAAMG,SCE3CC,EANE,SAACJ,GAChB,OACE,6BAAMA,EAAMK,U,iCCAVC,EAAYC,YAAiB,IAepBC,cAAU,CAACC,KAAM,wBAAjBD,EAbQ,SAAAR,GACnB,OACI,0BAAMU,SAAUV,EAAMW,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUX,KAAK,iBAAiBY,YAAY,qBAAqBC,SAAU,CAACC,IAAUX,MAE5G,6BACI,6CCYDY,EApBC,SAAClB,GAEb,IAAImB,EAAenB,EAAMmB,aAErBC,EAAiBD,EAAaE,WAAWC,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMqB,IAAKD,EAAErB,GAAIA,GAAIqB,EAAErB,QAC/FuB,EAAkBN,EAAaO,SAASJ,KAAI,SAACK,GAAD,OAAO,kBAACC,EAAD,CAAUvB,QAASsB,EAAEtB,QAASmB,IAAKG,EAAEzB,GAAIA,GAAIyB,EAAEzB,QAMtG,OACI,yBAAK2B,UAAWC,IAAEZ,SACbE,EACD,6BAAMK,GACN,kBAAC,EAAD,CAAgBf,SARJ,SAAAqB,GAChB/B,EAAMgC,YAAYD,EAAOE,qB,uDCV7BC,EAA6B,SAAAC,GAAK,MAAK,CAACC,OAAQD,EAAME,KAAKD,S,OCYhDE,sBACXC,aAXkB,SAAAJ,GAAK,MAAK,CAAChB,aAAcgB,EAAMhB,iBAE5B,SAACqB,GACtB,MAAO,CACHR,YAAa,SAACC,GACVO,EAASC,YAAmBR,UDLR,SAAAS,GAAc,IAEpCC,EAFmC,iLAIjC,OAAKC,KAAK5C,MAAMoC,OACT,kBAACM,EAAcE,KAAK5C,OADI,kBAAC,IAAD,CAAUC,GAAG,eAJX,GAET4C,IAAMH,WAStC,OAFqCH,YAAQL,EAARK,CAAqCI,KCC/DL,CAGbpB","file":"static/js/3.622acbd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__1CHsR\"};","import React from 'react';\nimport {NavLink} from \"react-router-dom\"\n\n// Компонент \"DialogItem\"\nconst DialogItem = (props) => {\n  return (\n    <div>\n      <NavLink to = {'/messages/' + props.id}><div>{props.name}</div></NavLink>\n    </div>\n  );\n}\n\nexport default DialogItem;\n","import React from 'react';\n\n// Компонент \"Messages\"\nconst Messages = (props) => {\n  return (\n    <div>{props.message}</div>\n  );\n}\n\nexport default Messages;\n","import React from 'react';\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newMessageBody' placeholder='Enter your message' validate={[required, maxLength]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from './DialogItem/DialogItem.js'\nimport Messages from './Message/Message.js'\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\nconst Dialogs = (props) => {\n\n    let messagesPage = props.messagesPage;\n\n    let dialogElements = messagesPage.dialogData.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n    let messagesElement = messagesPage.messages.map((m) => <Messages message={m.message} key={m.id} id={m.id}/>);\n\n    let addNewMessage = values => {\n        props.sendMessage(values.newMessageBody);\n    };\n\n    return (\n        <div className={s.Dialogs}>\n            {dialogElements}\n            <div>{messagesElement}</div>\n            <AddMessageForm onSubmit={addNewMessage}/>\n        </div>\n    );\n};\n\nexport default Dialogs;\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = state => ({isAuth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = Component => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n","import { sendMessageCreator } from '../../redux/dialogs-reducer'\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = state => ({messagesPage: state.messagesPage});\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}